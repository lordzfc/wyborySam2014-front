"use strict";angular.module("wyborySam2014",["nvd3","smart-table","ui.router","ui.bootstrap","wyborySam2014.area","wyborySam2014.charts","wyborySam2014.tables","wyborySam2014.utils","wyborySam2014.http","wyborySam2014.landingPage"]).constant("DEV_API_PREFIX","http://localhost:8081/api/").constant("HEROKU_API_PREFIX","wyreczamy-pkw.herokuapp.com/api/"),angular.module("wyborySam2014").config(["$stateProvider",function(a){a.state("stats-app",{url:"/app/{dataUrl}",controller:"wyborySam2014.area.ctrl",templateUrl:"area/area.ctrl.html"}).state("landing",{url:"",controller:"wyborySam2014.landing.ctrl",templateUrl:"landing_page/landing.ctrl.html"})}]),angular.module("wyborySam2014.area",[]),angular.module("wyborySam2014.area").controller("wyborySam2014.area.ctrl",["$scope","$rootScope","$http","$stateParams","httpService","urls",function(a,t,e,r,n,o){var i=function(t){var e=t.filter(function(t){return t.type===a.electionKind.type})[0];return e},l=function(t,e){n.getStatsData(t).success(function(r){a.stats=r,a.siteName=e,o.changeDataUrl(t,a.dataUrl,"stats")})};a.chartData={key:"",values:[]},a.dataUrl=r.dataUrl,n.getAreasTree().success(function(t){a.tree=t;var e=o.decode(r.dataUrl),n=o.getSiteName(e);a.electionKind=o.getElectionKind(t,e),a.navTree=i(t),l(e,n)}),a.$watch("electionKind",function(e,r){e!==r&&void 0!==r&&(a.navTree=i(a.tree),t.$broadcast("area::electionTypeChange"),l(a.electionKind.url,"Warszawa"))});var c=t.$on("area::areaTypeChange",function(a,t,e){l(t,e)});a.$on("$destroy",c),a.menuIsVisible=function(){return a.openMenu===!1||a.openMenu===!0},a.menuIsOff=function(){return a.openMenu===!1},a.dropdownIsOff=function(){return a.electionKindsDropwn===!1},a.dropdownIsVisible=function(){return a.electionKindsDropwn===!1||a.electionKindsDropwn===!0},a.changeElectionKind=function(t){a.dataUrl=t.url,a.electionKind={name:t.name,type:t.type,url:t.url},n.getStatsData(t.url).success(function(t){a.statsData=t}),o.changeDataUrl(t.url,"stats"),a.electionKindsDropwn=!1}}]),angular.module("wyborySam2014.charts",[]),angular.module("wyborySam2014.http",[]),angular.module("wyborySam2014.http").factory("httpService",["$http","DEV_API_PREFIX",function(a,t){var e={};return e.getAreasTree=function(){return a.get(t+"stats/areas-tree/")},e.getStatsData=function(e){return a.get(t+e)},e}]),angular.module("wyborySam2014.landingPage",[]),angular.module("wyborySam2014.landingPage").controller("wyborySam2014.landing.ctrl",["$scope","$state","httpService","urls",function(a,t,e,r){e.getAreasTree().success(function(t){a.tree=t}),a.data=null,a.gotoStats=function(a){a||(a="stats/city_council/circle-1/"),t.go("stats-app",{dataUrl:r.code(a)})}}]),angular.module("wyborySam2014.tables",[]),angular.module("wyborySam2014.utils",[]),angular.module("wyborySam2014.utils").factory("urls",["$location",function(a){var t={};return t.code=function(a){return a.replace(/\//g,".")},t.decode=function(a){return a.replace(/\./g,"/")},t.getSiteName=function(a,t){if(a)var e=a.split(t||"/"),r=e[e.length-2].split("-");return a&&"circle"===r[0]?"Okręg nr "+r[1]:a&&"circuit"===r[0]?"Obwód nr "+r[1]:a&&"district"===r[0]?r[1]:"Warszawa"},t.getElectionKind=function(a,t,e){if(!t||!a)return{name:"Wybory do Rady Miasta",type:"city_council",url:"stats/city_council/"};var r=t.split(e||"/")[1],n=a.filter(function(a){return a.type===r})[0];return{name:n.name,type:n.type,url:n.url}},t.changeDataUrl=function(e,r,n){var o=a.path().split("/");o.pop(),o.push(t.code(e)),a.path(o.join("/"))},t}]),angular.module("wyborySam2014.area").directive("mainCity",["$rootScope",function(a){return{scope:{election:"="},restrict:"E",templateUrl:"area/tree/main-city.dir.html",link:function(t,e,r,n){t.deactivateAllBranches=function(t,e){t.stopPropagation(),a.$broadcast("tree.city::deactivateAllBranches")},t.changeArea=function(t,e){t.stopPropagation(),a.$broadcast("area::areaTypeChange",e.url,e.name)}}}}]),angular.module("wyborySam2014.area").directive("areasTree",["$rootScope",function(a){return{scope:{tree:"="},restrict:"E",templateUrl:"area/tree/tree.dir.html",link:function(t,e,r,n){t.active=-1,t.activateDeactivate=function(a,e){return a.stopPropagation(),-1===t.active?void(t.active=e):void(t.active=-1)};var o=a.$on("area::electionTypeChange",function(){t.active=-1});t.$on("$destroy",o);var i=a.$on("tree.city::deactivateAllBranches",function(){t.active=-1});t.$on("$destroy",i),t.changeArea=function(t,e){t.stopPropagation(),a.$broadcast("area::areaTypeChange",e.url,e.name)}}}}]),angular.module("wyborySam2014.charts").controller("wyborySam2014.charts.mainCtrl",["$scope",function(a){a.options={chart:{type:"discreteBarChart",height:400,margin:{top:20,right:40,bottom:50,left:55},x:function(a){return a.label},y:function(a){return a.value},showValues:!1,valueFormat:function(a){return d3.format(",.2f%")(a)},duration:500,xAxis:{},yAxis:{axisLabelDistance:0}}}}]),angular.module("wyborySam2014.charts").directive("chartsView",[function(){return{scope:{data:"="},controller:"wyborySam2014.charts.mainCtrl",restrict:"E",templateUrl:"charts/main/charts.dir.html",link:function(a,t,e,r){a.chartData=[{key:"Cumulative Return",values:[]}],a.$watch("data",function(t,e){t!==e&&(a.chartData[0].values=_.map(t.votes,function(a){return{value:a.percentage,label:a.political_party}}),a.chartData[0].values.sort(function(a,t){return t.value-a.value}))})}}}]),angular.module("wyborySam2014.tables").controller("wyborySam2014.tables.mainCtrl",["$scope",function(a){a.rowCollection=[{firstName:"Laurent",lastName:"Renard",birthDate:new Date("1987-05-21"),balance:102,email:"whatever@gmail.com"},{firstName:"Blandine",lastName:"Faivre",birthDate:new Date("1987-04-25"),balance:-2323.22,email:"oufblandou@gmail.com"},{firstName:"Francoise",lastName:"Frere",birthDate:new Date("1955-08-27"),balance:42343,email:"raymondef@gmail.com"}]}]),angular.module("wyborySam2014.tables").directive("tablesView",[function(){return{scope:{stats:"=",electionKind:"="},controller:"wyborySam2014.tables.mainCtrl",restrict:"E",templateUrl:"tables/main/tables.dir.html",link:function(a,t,e,r){}}}]);
//# sourceMappingURL=data:application/json;base64,
